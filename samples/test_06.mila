program test_functions;

function func_no_params(): Integer; begin
    func_no_params := 42;
    exit;
end;

function pow(x: Integer; a: Integer): Integer;
var i: Integer;
begin
    pow := 1;
    for i := 0 to a - 1 do
        pow := x * pow;
end;

var arr: array [-2 .. 2] of Float;

procedure log_array(tag: String; data: array [-2 .. 2] of Float); forward;

procedure log_array(tag: String; data: array [-2 .. 2] of Float);
var i, is_first: Integer;
begin
    is_first := 1;
    write(tag);
    write(": [");
    for i := -2 to 2 do begin
        if not(is_first) then begin
            write(", ");
        end
        else
            is_first := not(is_first);

        write(arr[i]);
    end;
    writeLn("]");
end;

procedure recursive(n: Integer);
begin
    writeLn(n);
    if n <> 0 then
        recursive(n - 1);
    writeLn(n);
end;

begin
    writeLn(func_no_params());
    writeLn(pow(3, 2));
    arr[0] := 42;
    log_array("arr", arr);
    recursive(5);
    exit
end.
